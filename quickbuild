# General compiler arguments
compiler = "clang++";
flags = "-g -O0 -Wall -Wextra -pedantic-errors -fcolor-diagnostics";

# Files to compile
sources = "src/*.cpp";
headers = "src/*.hpp";

# Files to create
objects = sources: "src/*.cpp" -> "obj/*.o";
binary = "./bin/quickbuild";
install_dir = "/usr/bin";

# Main target
"quickbuild" {
  depends = "setup", objects, headers;
  run = "[compiler] [flags] [objects] -o [binary]";
}

# Object files
objects as obj {
  # If a header is changed, everything needs to be rebuilt
  obj_source = obj: "obj/*.o" -> "src/*.cpp";
  depends = obj_source; #, headers;
  run = "[compiler] [flags] -c [obj_source] -o [obj]";
}

# Setup the build directories
"setup" {
  run = "mkdir -p obj",
        "mkdir -p bin";
}

# Install binary
"install" {
  run = "install -m 755 [binary] [install_dir]";
}

"test" {
  run = "echo [foo] [bar]";
}

# Run
"run" {
  depends = "quickbuild";
  run = "[binary]";
}

# Clean
"clean" {
  run = "rm [objects]",
        "rm [binary]";
}

"one" {
  run = "echo hey!";
}
